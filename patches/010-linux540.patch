--- a/src/wl/sys/wl_linux.c	2019-05-08 06:04:33.000000000 -0400
+++ b/src/wl/sys/wl_linux.c	2020-02-10 08:04:23.769900844 -0500
@@ -582,7 +586,7 @@
 	}
 	wl->bcm_bustype = bustype;
 
-	if ((wl->regsva = ioremap_nocache(dev->base_addr, PCI_BAR0_WINSZ)) == NULL) {
+	if ((wl->regsva = ioremap_cache(dev->base_addr, PCI_BAR0_WINSZ)) == NULL) {
 		WL_ERROR(("wl%d: ioremap() failed\n", unit));
 		goto fail;
 	}
@@ -772,7 +776,7 @@
 	if ((val & 0x0000ff00) != 0)
 		pci_write_config_dword(pdev, 0x40, val & 0xffff00ff);
 		bar1_size = pci_resource_len(pdev, 2);
-		bar1_addr = (uchar *)ioremap_nocache(pci_resource_start(pdev, 2),
+		bar1_addr = (uchar *)ioremap_cache(pci_resource_start(pdev, 2),
 			bar1_size);
 	wl = wl_attach(pdev->vendor, pdev->device, pci_resource_start(pdev, 0), PCI_BUS, pdev,
 		pdev->irq, bar1_addr, bar1_size);
@@ -3334,7 +3351,13 @@
 	return length;
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 4, 0)
+static const struct proc_ops wl_pops = {
+	.proc_read = wl_proc_read,
+	.proc_write = wl_proc_write,
+	
+};
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(3, 10, 0)
 static const struct file_operations wl_fops = {
 	.owner	= THIS_MODULE,
 	.read	= wl_proc_read,
@@ -3350,9 +3373,12 @@
 #if LINUX_VERSION_CODE < KERNEL_VERSION(3, 10, 0)
 	if ((wl->proc_entry = create_proc_entry(tmp, 0644, NULL)) == NULL) {
 		WL_ERROR(("%s: create_proc_entry %s failed\n", __FUNCTION__, tmp));
-#else
+#elif LINUX_VERSION_CODE < KERNEL_VERSION(5, 4, 0)
 	if ((wl->proc_entry = proc_create_data(tmp, 0644, NULL, &wl_fops, wl)) == NULL) {
 		WL_ERROR(("%s: proc_create_data %s failed\n", __FUNCTION__, tmp));
+#else
+	if ((wl->proc_entry = proc_create_data(tmp, 0644, NULL, &wl_pops, wl)) == NULL) {
+		WL_ERROR(("%s: proc_create_data %s failed\n", __FUNCTION__, tmp));
 #endif
 		ASSERT(0);
 		return -1;
--- a/src/shared/linux_osl.c	2019-05-08 06:04:33.000000000 -0400
+++ b/src/shared/linux_osl.c	2020-02-09 20:53:34.644256095 -0500
@@ -942,7 +946,7 @@
 void *
 osl_reg_map(uint32 pa, uint size)
 {
-	return (ioremap_nocache((unsigned long)pa, (unsigned long)size));
+	return (ioremap_cache((unsigned long)pa, (unsigned long)size));
 }
 
 void
